{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aoki\\\\Documents\\\\Projects\\\\chatbot-room\\\\client\\\\src\\\\components\\\\SetupScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { validateApiKeys, startChat } from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AVAILABLE_BOTS = [{\n  id: 'gpt4o',\n  name: 'ChatGPT-4o',\n  provider: 'openai'\n}, {\n  id: 'claude',\n  name: 'Claude 3.7',\n  provider: 'anthropic'\n}, {\n  id: 'deepseek',\n  name: 'Deepseek R1',\n  provider: 'deepseek'\n}];\nfunction SetupScreen({\n  onSessionCreated\n}) {\n  _s();\n  const [selectedBots, setSelectedBots] = useState([]);\n  const [apiKeys, setApiKeys] = useState({});\n  const [tokenLimits, setTokenLimits] = useState({});\n  const [initialTopic, setInitialTopic] = useState('');\n  const [validating, setValidating] = useState(false);\n  const [error, setError] = useState('');\n  const handleBotSelection = botId => {\n    if (selectedBots.find(bot => bot.id === botId)) {\n      setSelectedBots(selectedBots.filter(bot => bot.id !== botId));\n    } else {\n      const bot = AVAILABLE_BOTS.find(b => b.id === botId);\n      setSelectedBots([...selectedBots, bot]);\n    }\n  };\n  const handleApiKeyChange = (botId, value) => {\n    setApiKeys({\n      ...apiKeys,\n      [botId]: value\n    });\n  };\n  const handleTokenLimitChange = (botId, value) => {\n    setTokenLimits({\n      ...tokenLimits,\n      [botId]: parseInt(value, 10)\n    });\n  };\n  const handleStartChat = async () => {\n    // Validation\n    if (selectedBots.length === 0) {\n      setError('Please select at least one bot');\n      return;\n    }\n    if (!initialTopic) {\n      setError('Please enter an initial topic');\n      return;\n    }\n    for (const bot of selectedBots) {\n      if (!apiKeys[bot.id]) {\n        setError(`Please enter API key for ${bot.name}`);\n        return;\n      }\n    }\n    try {\n      setValidating(true);\n      setError('');\n\n      // Prepare the bots with their API keys\n      const botsWithKeys = selectedBots.map(bot => ({\n        ...bot,\n        apiKey: apiKeys[bot.id]\n      }));\n\n      // Validate API keys\n      const validationResults = await validateApiKeys(botsWithKeys);\n\n      // Check if all keys are valid\n      const invalidBots = Object.entries(validationResults).filter(([_, isValid]) => !isValid).map(([botId]) => AVAILABLE_BOTS.find(b => b.id === botId).name);\n      if (invalidBots.length > 0) {\n        setError(`Invalid API keys for: ${invalidBots.join(', ')}`);\n        setValidating(false);\n        return;\n      }\n\n      // Start the chat session\n      const session = await startChat(botsWithKeys, initialTopic, tokenLimits);\n      onSessionCreated(session);\n    } catch (err) {\n      setError(`Failed to start chat: ${err.message}`);\n    } finally {\n      setValidating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setup-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Setup Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Bots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), AVAILABLE_BOTS.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedBots.some(b => b.id === bot.id),\n            onChange: () => handleBotSelection(bot.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), bot.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), selectedBots.some(b => b.id === bot.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-settings\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `api-key-${bot.id}`,\n              children: \"API Key:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: `api-key-${bot.id}`,\n              type: \"password\",\n              value: apiKeys[bot.id] || '',\n              onChange: e => handleApiKeyChange(bot.id, e.target.value),\n              placeholder: `Enter ${bot.name} API Key`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `token-limit-${bot.id}`,\n              children: \"Token Limit:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: `token-limit-${bot.id}`,\n              type: \"number\",\n              value: tokenLimits[bot.id] || 500,\n              onChange: e => handleTokenLimitChange(bot.id, e.target.value),\n              min: \"50\",\n              max: \"2000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)]\n      }, bot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Initial Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: initialTopic,\n        onChange: e => setInitialTopic(e.target.value),\n        placeholder: \"Enter a topic to start the conversation...\",\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartChat,\n      disabled: validating || selectedBots.length === 0 || !initialTopic,\n      className: \"primary-button\",\n      children: validating ? 'Validating...' : 'Start Chat'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(SetupScreen, \"75XjD57LzQxdzeoSzZONXdcarGc=\");\n_c = SetupScreen;\nexport default SetupScreen;\nvar _c;\n$RefreshReg$(_c, \"SetupScreen\");","map":{"version":3,"names":["React","useState","validateApiKeys","startChat","jsxDEV","_jsxDEV","AVAILABLE_BOTS","id","name","provider","SetupScreen","onSessionCreated","_s","selectedBots","setSelectedBots","apiKeys","setApiKeys","tokenLimits","setTokenLimits","initialTopic","setInitialTopic","validating","setValidating","error","setError","handleBotSelection","botId","find","bot","filter","b","handleApiKeyChange","value","handleTokenLimitChange","parseInt","handleStartChat","length","botsWithKeys","map","apiKey","validationResults","invalidBots","Object","entries","_","isValid","join","session","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","some","onChange","htmlFor","e","target","placeholder","min","max","rows","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Aoki/Documents/Projects/chatbot-room/client/src/components/SetupScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { validateApiKeys, startChat } from '../services/apiService';\r\n\r\nconst AVAILABLE_BOTS = [\r\n  { id: 'gpt4o', name: 'ChatGPT-4o', provider: 'openai' },\r\n  { id: 'claude', name: 'Claude 3.7', provider: 'anthropic' },\r\n  { id: 'deepseek', name: 'Deepseek R1', provider: 'deepseek' }\r\n];\r\n\r\nfunction SetupScreen({ onSessionCreated }) {\r\n  const [selectedBots, setSelectedBots] = useState([]);\r\n  const [apiKeys, setApiKeys] = useState({});\r\n  const [tokenLimits, setTokenLimits] = useState({});\r\n  const [initialTopic, setInitialTopic] = useState('');\r\n  const [validating, setValidating] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleBotSelection = (botId) => {\r\n    if (selectedBots.find(bot => bot.id === botId)) {\r\n      setSelectedBots(selectedBots.filter(bot => bot.id !== botId));\r\n    } else {\r\n      const bot = AVAILABLE_BOTS.find(b => b.id === botId);\r\n      setSelectedBots([...selectedBots, bot]);\r\n    }\r\n  };\r\n\r\n  const handleApiKeyChange = (botId, value) => {\r\n    setApiKeys({\r\n      ...apiKeys,\r\n      [botId]: value\r\n    });\r\n  };\r\n\r\n  const handleTokenLimitChange = (botId, value) => {\r\n    setTokenLimits({\r\n      ...tokenLimits,\r\n      [botId]: parseInt(value, 10)\r\n    });\r\n  };\r\n\r\n  const handleStartChat = async () => {\r\n    // Validation\r\n    if (selectedBots.length === 0) {\r\n      setError('Please select at least one bot');\r\n      return;\r\n    }\r\n\r\n    if (!initialTopic) {\r\n      setError('Please enter an initial topic');\r\n      return;\r\n    }\r\n\r\n    for (const bot of selectedBots) {\r\n      if (!apiKeys[bot.id]) {\r\n        setError(`Please enter API key for ${bot.name}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      setValidating(true);\r\n      setError('');\r\n\r\n      // Prepare the bots with their API keys\r\n      const botsWithKeys = selectedBots.map(bot => ({\r\n        ...bot,\r\n        apiKey: apiKeys[bot.id]\r\n      }));\r\n\r\n      // Validate API keys\r\n      const validationResults = await validateApiKeys(botsWithKeys);\r\n      \r\n      // Check if all keys are valid\r\n      const invalidBots = Object.entries(validationResults)\r\n        .filter(([_, isValid]) => !isValid)\r\n        .map(([botId]) => AVAILABLE_BOTS.find(b => b.id === botId).name);\r\n\r\n      if (invalidBots.length > 0) {\r\n        setError(`Invalid API keys for: ${invalidBots.join(', ')}`);\r\n        setValidating(false);\r\n        return;\r\n      }\r\n\r\n      // Start the chat session\r\n      const session = await startChat(botsWithKeys, initialTopic, tokenLimits);\r\n      onSessionCreated(session);\r\n    } catch (err) {\r\n      setError(`Failed to start chat: ${err.message}`);\r\n    } finally {\r\n      setValidating(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"setup-screen\">\r\n      <h2>Setup Chat</h2>\r\n      \r\n      <div className=\"section\">\r\n        <h3>Select Bots</h3>\r\n        {AVAILABLE_BOTS.map(bot => (\r\n          <div key={bot.id} className=\"bot-option\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedBots.some(b => b.id === bot.id)}\r\n                onChange={() => handleBotSelection(bot.id)}\r\n              />\r\n              {bot.name}\r\n            </label>\r\n            \r\n            {selectedBots.some(b => b.id === bot.id) && (\r\n              <div className=\"bot-settings\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor={`api-key-${bot.id}`}>API Key:</label>\r\n                  <input\r\n                    id={`api-key-${bot.id}`}\r\n                    type=\"password\"\r\n                    value={apiKeys[bot.id] || ''}\r\n                    onChange={(e) => handleApiKeyChange(bot.id, e.target.value)}\r\n                    placeholder={`Enter ${bot.name} API Key`}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor={`token-limit-${bot.id}`}>Token Limit:</label>\r\n                  <input\r\n                    id={`token-limit-${bot.id}`}\r\n                    type=\"number\"\r\n                    value={tokenLimits[bot.id] || 500}\r\n                    onChange={(e) => handleTokenLimitChange(bot.id, e.target.value)}\r\n                    min=\"50\"\r\n                    max=\"2000\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"section\">\r\n        <h3>Initial Topic</h3>\r\n        <textarea\r\n          value={initialTopic}\r\n          onChange={(e) => setInitialTopic(e.target.value)}\r\n          placeholder=\"Enter a topic to start the conversation...\"\r\n          rows={3}\r\n        />\r\n      </div>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      <button \r\n        onClick={handleStartChat} \r\n        disabled={validating || selectedBots.length === 0 || !initialTopic}\r\n        className=\"primary-button\"\r\n      >\r\n        {validating ? 'Validating...' : 'Start Chat'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetupScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}