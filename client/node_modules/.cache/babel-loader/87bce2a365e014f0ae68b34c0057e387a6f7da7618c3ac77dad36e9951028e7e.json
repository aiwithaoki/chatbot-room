{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aoki\\\\Documents\\\\Projects\\\\chatbot-room\\\\client\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getBotResponse, sendUserInput } from '../services/apiService';\nimport MessageBubble from './MessageBubble';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatRoom({\n  session,\n  onEndChat\n}) {\n  _s();\n  const [messages, setMessages] = useState(session.messages || []);\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [currentBotIndex, setCurrentBotIndex] = useState(0);\n  const [error, setError] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const fetchNextBotResponse = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const nextBot = session.bots[currentBotIndex];\n      const response = await getBotResponse(session.id, nextBot.id);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: response.botResponse.content,\n        botId: response.botResponse.botId,\n        botName: response.botResponse.botName\n      }]);\n      setCurrentBotIndex(response.nextBotIndex);\n    } catch (err) {\n      setError(`Error getting bot response: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!userInput.trim()) return;\n    setLoading(true);\n    try {\n      // Add user message to the conversation\n      const newUserMessage = {\n        role: 'user',\n        content: userInput\n      };\n      setMessages(prev => [...prev, newUserMessage]);\n\n      // Send to backend\n      await sendUserInput(session.id, userInput);\n\n      // Clear input\n      setUserInput('');\n\n      // Get next bot response\n      await fetchNextBotResponse();\n    } catch (err) {\n      setError(`Error sending message: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSkip = async () => {\n    await fetchNextBotResponse();\n  };\n  const getCurrentBotName = () => {\n    const bot = session.bots[currentBotIndex];\n    return bot ? bot.name : '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-rotation\",\n        children: [\"Next: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"next-bot\",\n          children: getCurrentBotName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-chat-btn\",\n        onClick: onEndChat,\n        children: \"End Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n        message: msg,\n        isUser: msg.role === 'user'\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Bot is thinking...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"Type your message...\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          disabled: !userInput.trim() || loading,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"skip-button\",\n          onClick: handleSkip,\n          disabled: loading,\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatRoom, \"nxDfMprTgYGQHC7omiNjj6hm2bE=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getBotResponse","sendUserInput","MessageBubble","jsxDEV","_jsxDEV","ChatRoom","session","onEndChat","_s","messages","setMessages","userInput","setUserInput","loading","setLoading","currentBotIndex","setCurrentBotIndex","error","setError","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchNextBotResponse","nextBot","bots","response","id","prev","role","content","botResponse","botId","botName","nextBotIndex","err","message","handleSendMessage","trim","newUserMessage","handleSkip","getCurrentBotName","bot","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","isUser","ref","value","onChange","e","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Aoki/Documents/Projects/chatbot-room/client/src/components/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { getBotResponse, sendUserInput } from '../services/apiService';\r\nimport MessageBubble from './MessageBubble';\r\n\r\nfunction ChatRoom({ session, onEndChat }) {\r\n  const [messages, setMessages] = useState(session.messages || []);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentBotIndex, setCurrentBotIndex] = useState(0);\r\n  const [error, setError] = useState('');\r\n  \r\n  const messagesEndRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n  \r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n  \r\n  const fetchNextBotResponse = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const nextBot = session.bots[currentBotIndex];\r\n      const response = await getBotResponse(session.id, nextBot.id);\r\n      \r\n      setMessages(prev => [...prev, {\r\n        role: 'assistant',\r\n        content: response.botResponse.content,\r\n        botId: response.botResponse.botId,\r\n        botName: response.botResponse.botName\r\n      }]);\r\n      \r\n      setCurrentBotIndex(response.nextBotIndex);\r\n    } catch (err) {\r\n      setError(`Error getting bot response: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleSendMessage = async () => {\r\n    if (!userInput.trim()) return;\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Add user message to the conversation\r\n      const newUserMessage = { role: 'user', content: userInput };\r\n      setMessages(prev => [...prev, newUserMessage]);\r\n      \r\n      // Send to backend\r\n      await sendUserInput(session.id, userInput);\r\n      \r\n      // Clear input\r\n      setUserInput('');\r\n      \r\n      // Get next bot response\r\n      await fetchNextBotResponse();\r\n    } catch (err) {\r\n      setError(`Error sending message: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleSkip = async () => {\r\n    await fetchNextBotResponse();\r\n  };\r\n  \r\n  const getCurrentBotName = () => {\r\n    const bot = session.bots[currentBotIndex];\r\n    return bot ? bot.name : '';\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-room\">\r\n      <div className=\"chat-header\">\r\n        <h2>Chat Room</h2>\r\n        <div className=\"bot-rotation\">\r\n          Next: <span className=\"next-bot\">{getCurrentBotName()}</span>\r\n        </div>\r\n        <button className=\"end-chat-btn\" onClick={onEndChat}>\r\n          End Chat\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"messages-container\">\r\n        {messages.map((msg, index) => (\r\n          <MessageBubble\r\n            key={index}\r\n            message={msg}\r\n            isUser={msg.role === 'user'}\r\n          />\r\n        ))}\r\n        {loading && <div className=\"loading-indicator\">Bot is thinking...</div>}\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <div className=\"chat-controls\">\r\n        <textarea\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n          disabled={loading}\r\n        />\r\n        <div className=\"button-group\">\r\n          <button \r\n            className=\"send-button\"\r\n            onClick={handleSendMessage} \r\n            disabled={!userInput.trim() || loading}\r\n          >\r\n            Send\r\n          </button>\r\n          <button \r\n            className=\"skip-button\"\r\n            onClick={handleSkip} \r\n            disabled={loading}\r\n          >\r\n            Skip\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}